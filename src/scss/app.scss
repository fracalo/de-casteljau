body{
  margin:0;
  display: flex;
  min-height: 100vh;
}
svg{
  flex-basis: 80vw;
  height: 99vh;
}
.ui{
  background: #222221;
  flex: 1 1 18vw;
  color: #fff;
  padding: 1em;
  font-family:'Space Mono', monospace;
  letter-spacing: 0.1em;
  text-align: center;
}
a{
  color:inherit;
  text-decoration: none;
  &:hover{
    color: lime;
  }
}
fieldset{
  margin: 0;
  border: 0;
  padding-top: 1em;
  border-top:1px solid magenta;
}
.animate{
  min-width: 60%
}
#t{
  display: inline-block;
  margin: 0 1em;
  width: calc(100% - 2em);
}

.animation-ui{
  display: flex;
  flex-wrap: wrap;

  &__title{
    flex: 0 0 100%;
  }

  &__input{
    flex: 1 1 25%;
    &__checkbox{
      margin-right: 1em;
    }
    &__number {
      width: 66%
    }
  }

  &__button{
    flex: 0 0 40%;
    margin-right: 1em;
    align-self: flex-end;
  }
  &__iteration, &__time {
    display: flex;
    flex-direction: column;
    flex-basis: 100%;
    &__title{
      margin: 1.5em 0.5em 0.5em 0.5em;
      align-self: flex-start;
    }
    &__label{
      display: inline-block
    }
    &__item{
      display: flex;
      justify-content: space-between;
      &__number{
        width:25%;
      }
      &--revealer{
        flex-wrap: wrap;
      }
    }
  }
}
label{
  display: block;
  text-transform: uppercase;
  font-size: 90%;
  position: relative;
}
label[for=anim-ui-from]::before{
  content: '\0394';
  color:magenta;
  position: absolute;
  left: -0.2em;
  font-size: 70%;
  top:15%
}
.reveal-if-active{
  display:flex;
  justify-content: space-between;
  flex-basis: 100%;
  opacity: 0;
  overflow: hidden;
  height: 0;
  transform: scale(0);
  transition: all 0.5s;

  &__input{
    flex-basis:25%;
  }
  &__label{
    padding-left: 2em;
  }
}
input[type="checkbox"]:checked ~ .reveal-if-active{
  opacity:1;
  overflow: visible;
  height: 1.3em;
  transform: scale(1);
}
label > span {
  color: magenta;
  padding-left: 1em;
}
#test-path{
  stroke-width:3;
  fill: none;
}
circle{
  r: 5;
}

line, circle:not(.point-handle) {
  pointer-events: none
}
